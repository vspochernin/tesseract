openapi: "3.0.0"
info:
    version: 1.0.0
    title: Tesseract
    description: Описание API
servers:
    -   url: http://localhost:8080/api/v1
paths:
    /login/tesseract:
        post:
            summary: Аутентификация через логин и пароль
            tags:
                - login
            requestBody:
                description: Данные для аутентификации через логин и пароль
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AuthCredentials'
            responses:
                '200':
                    description: Успешная аутентификация
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SuccessAuthToken'
                '400':
                    description: Некорректное тело запроса
                '401':
                    description: Несуществующая комбинация логин/пароль
    /login/google:
        post:
            tags:
                - login
            summary: Аутентификация через Google OAuth
            requestBody:
                description: Данные для аутентификации через Google OAuth
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AuthGoogleCredentials'
            responses:
                '200':
                    description: Успешная аутентификация
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SuccessAuthToken'
                '400':
                    description: Некорректное тело запроса
                '401':
                    description: Некорректный Google токен
    /register:
        post:
            tags:
                - register
            summary: Регистрация пользователя
            requestBody:
                description: Данные для регистрации
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterCredentials'
            responses:
                '201':
                    description: Успешная регистрация
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SuccessAuthToken'
                '400':
                    description: Некорректное тело запроса
    /password:
        put:
            summary: Изменить пароль
            tags:
                - password
            parameters:
                -   $ref: '#/components/parameters/authCredsParam'
            requestBody:
                description: Данные для смены пароля
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PasswordChangeCredentials'
            responses:
                '200':
                    description: Успешное изменение пароля
                '400':
                    description: Некорректное тело запроса
                '401':
                    description: Отсутствуют данные аутентификации
    /assets:
        post:
            tags:
                - asset
            summary: Получить список всех активов
            parameters:
                -   $ref: '#/components/parameters/authCredsParam'
                -   $ref: '#/components/parameters/pageNumber'
                -   $ref: '#/components/parameters/pageSize'
            responses:
                '200':
                    description: Успешное получение списка активов
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AssetList'
                '401':
                    description: Отсутствуют данные аутентификации
    /favourites/{id}:
        post:
            tags:
                - favourites
            summary: Добавить актив в избранное
            parameters:
                -   $ref: '#/components/parameters/authCredsParam'
                -   $ref: '#/components/parameters/idPath'
            responses:
                '200':
                    description: Актив уже присутствует в избранном
                '201':
                    description: Актив был добавлен в избранное
                '400':
                    description: Некорректное тело запроса
                '401':
                    description: Отсутствуют данные аутентификации
                '404':
                    description: Указан несуществующий id актива
        delete:
            tags:
                - favourites
            summary: Удалить актив из избранного
            parameters:
                -   $ref: '#/components/parameters/authCredsParam'
                -   $ref: '#/components/parameters/idPath'
            responses:
                '200':
                    description: Успешное удаление актива из избранного (либо отсутствие актива в избранных)
                '400':
                    description: Некорректное тело запроса
                '401':
                    description: Отсутствуют данные аутентификации
                '404':
                    description: Указан несуществующий id актива
    /assets/{id}:
        get:
            tags:
                - asset
            summary: Получить информацию о конкретном активе
            parameters:
                -   $ref: '#/components/parameters/authCredsParam'
                -   $ref: '#/components/parameters/idPath'
            responses:
                '200':
                    description: Успешное получение информации об активе
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpecifiedAsset'
                '400':
                    description: Некорректное тело запроса
                '401':
                    description: Отсутствуют данные аутентификации
                '404':
                    description: Указан несуществующий id актива
    /favourites:
        get:
            tags:
                - favourites
            summary: Получить список избранных активов
            parameters:
                -   $ref: '#/components/parameters/authCredsParam'
                -   $ref: '#/components/parameters/pageNumber'
                -   $ref: '#/components/parameters/pageSize'
            responses:
                '200':
                    description: Успешное получение списка активов
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AssetList'
                '400':
                    description: Некорректное тело запроса
                '401':
                    description: Отсутствуют данные аутентификации
    /portfolios:
        get:
            tags:
                - portfolio
            summary: Получить список портфелей
            parameters:
                -   $ref: '#/components/parameters/authCredsParam'
                -   $ref: '#/components/parameters/pageNumber'
                -   $ref: '#/components/parameters/pageSize'
            responses:
                '200':
                    description: Успешное получение списка портфелей
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PortfoliosList'
                '401':
                    description: Отсутствуют данные аутентификации
        post:
            tags:
                - portfolio
            summary: Создать портфель
            requestBody:
                description: Данные для создании портфеля
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PortfolioCreateInfo'
            parameters:
                -   $ref: '#/components/parameters/authCredsParam'
            responses:
                '201':
                    description: Успешное создание портфеля
                '400':
                    description: Некорректное тело запроса
                '401':
                    description: Отсутствуют данные аутентификации
                '404':
                    description: Отсутствуют активы с выбранным типом рискованности
    /portfolios/{id}:
        get:
            tags:
                - portfolio

            summary: Получить информацию о конкретном портфеле
            parameters:
                -   $ref: '#/components/parameters/authCredsParam'
                -   $ref: '#/components/parameters/idPath'
            responses:
                '200':
                    description: Успешное получение портфеля
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpecifiedPortfolio'
                '400':
                    description: Некорректное тело запроса
                '401':
                    description: Отсутствуют данные аутентификации
                '404':
                    description: Отсутствует портфель с таким id (либо запрашиваем не свой портфель)
components:
    parameters:
        authCredsParam:
            name: authCreds
            in: header
            description: JWT токен аутентификации
            required: true
            schema:
                type: string
        idPath:
            name: id
            in: path
            description: Уникальный номер сущности
            required: true
            schema:
                type: integer
        pageNumber:
            name: pageNumber
            in: query
            description: Номер страницы пагинации (начинается с 0)
            required: false
            schema:
                type: integer
        pageSize:
            name: pageSize
            in: query
            description: Размер одной страницы пагинации
            required: false
            schema:
                type: integer
    schemas:
        AuthCredentials:
            type: object
            properties:
                login:
                    type: string
                password:
                    type: string
        SuccessAuthToken:
            type: object
            properties:
                token:
                    type: string
        AuthGoogleCredentials:
            type: object
            properties:
                token:
                    type: string
        RegisterCredentials:
            type: object
            properties:
                login:
                    type: string
                password:
                    type: string
                email:
                    type: string
        PasswordChangeCredentials:
            type: object
            properties:
                oldPassword:
                    type: string
                newPassword:
                    type: string
        Asset:
            type: object
            properties:
                assetId:
                    type: integer
                assetTitle:
                    type: string
                companyTitle:
                    type: string
                assetPrice:
                    type: integer
                    format: int64
                    description: Стоимость актива, в копейках
                assetPriceDiff:
                    type: integer
                    format: int64
                    description: Изменение стоимости актива за последний день, в копейках
                favouriteStatus:
                    type: boolean
        AssetList:
            type: array
            items:
                $ref: '#/components/schemas/Asset'
        SpecifiedAsset:
            type: object
            properties:
                assetId:
                    type: integer
                assetTitle:
                    type: string
                assetDescription:
                    type: string
                assetPrice:
                    type: integer
                    format: int64
                    description: Стоимость актива, в копейках
                assetPriceDiff:
                    type: integer
                    format: int64
                    description: Изменение стоимости актива за последний день, в копейках
                companyTitle:
                    type: string
                companyDescription:
                    type: string
                riskTypeId:
                    type: integer
                favouriteStatus:
                    type: boolean
                operatorTitle:
                    type: string
        Portfolio:
            type: object
            properties:
                portfolioId:
                    type: integer
                createDatetime:
                    type: string
                    description: Формат времени ISO 8601
                riskTypeId:
                    type: integer
                currentAmount:
                    type: integer
                    format: int64
                    description: Текущая стоимость портфеля, в копейках
                amountDiff:
                    type: integer
                    format: int64
                    description: Изменение стоимости портфеля с момента создания, в копейках
        PortfoliosList:
            type: array
            items:
                $ref: '#/components/schemas/Portfolio'
        PortfolioCreateInfo:
            type: object
            properties:
                amount:
                    type: integer
                    format: int64
                    description: Стоимость создаваемого портфеля, в копейках
                riskTypeId:
                    type: integer
        PortfolioAsset:
            type: object
            properties:
                assetId:
                    type: integer
                assetTitle:
                    type: string
                companyTitle:
                    type: string
                currentPriceSum:
                    type: integer
                    format: int64
                    description: Текущая стоимость всех активов данного вида, в копейках
                count:
                    type: integer
                favouriteStatus:
                    type: boolean
                priceSumDiff:
                    type: integer
                    format: int64
                    description: Изменение стоимости всех активов данного вида с момента создания портфеля, в копейках
                currentPrice:
                    type: integer
                    format: int64
                    description: Текущая стоимость одного актива данного вида, в копейках
        SpecifiedPortfolio:
            type: object
            properties:
                createDatetime:
                    type: string
                    description: Формат времени ISO 8601
                currentAmount:
                    type: integer
                    format: int64
                    description: Текущая стоимость портфеля, в копейках
                riskTypeId:
                    type: integer
                assetsList:
                    type: array
                    items:
                        $ref: "#/components/schemas/PortfolioAsset"
                amountDiff:
                    type: integer
                    format: int64
                    description: Изменение стоимости портфеля с момента создания, в копейках
    responses:
        NotFound:
            description: Сущность не найдена
        GeneralError:
            description: Непредвиденная ошибка